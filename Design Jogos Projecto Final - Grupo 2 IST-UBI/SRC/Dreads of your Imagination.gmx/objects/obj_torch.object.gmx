<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_torch_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_light = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 512;

if (!surface_exists(light) &amp;&amp; can_light){
light = surface_create(view_wview, view_hview)
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_ellipse_colour(x - size/2 - view_xview,y - size/2 - view_yview,x + size/2 - view_xview,y + size/2 - view_yview,c_orange,c_black,false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
}
else if (can_light){
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_ellipse_colour(x - size/2 - view_xview,y - size/2 - view_yview,x + size/2 - view_xview,y + size/2 - view_yview,c_orange,c_black,false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(can_light &amp;&amp; obj_player.state == states.normal &amp;&amp; collision_circle(x,y,220,obj_player,false,false) &amp;&amp; (room == lvl1_2 || room == lvl1_3 || room == lvl1_4)){
    with(obj_player){
        if(hp &lt; 100 &amp;&amp; hp &gt; 0)
            hp += 1;
    }
}

if(instance_exists(obj_pet) &amp;&amp; obj_pet.state == states.petcontroll &amp;&amp; start_boss &amp;&amp; collision_circle(x,y,220,obj_player,false,false)){
    with(obj_player){
        if(hp &lt; 100 &amp;&amp; hp &gt; 0)
            hp += 0.1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (!surface_exists(light) &amp;&amp; can_light){
sprite_index = spr_torch_light;
image_speed = 0.1;
}
else if (can_light){
sprite_index = spr_torch_light;
image_speed = 0.1;
}
else if (!can_light) sprite_index = spr_torch;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
