<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_obscuro_walk_and_iddle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = states.transforming;
vsp = 0;
hsp = 0;
alarm[0] = 10 * room_speed;
hp = 200;
can_be_transformed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
    case states.normal:
    {
        hsp = 0;
        vsp = (min(7,vsp+0.05));
        if(distance_to_object(obj_pet) &lt; 96) state = states.chase;
    }
    break;
    case states.chase:
    {
        dir = sign(obj_pet.x -x);
        hsp = dir * 1;
        vsp = (min(7,vsp+0.05));
        if(distance_to_object(obj_pet) &gt; 1289) state = states.normal;
    }
    break;
    case states.transforming:{ if(start_boss) state = states.normal; break;}
}

//Horizontal Collision
if (place_meeting(x+hsp,y, obj_box))
{
    yplus = 0;
    while(place_meeting(x+hsp,y-yplus, obj_box) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+=1;
    if place_meeting(x+hsp,y-yplus,obj_box)
    {
        while(!place_meeting(x+sign(hsp),y,obj_box)) x += sign(hsp);
        hsp = 0;
    }
    else
    {
        y -= yplus;
    }
}


x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp, obj_box))
{
    while(!place_meeting(x,y+sign(vsp),obj_box)) y += sign(vsp);
    vsp = 0;
}

if (place_meeting(x,y+1,obj_box))
{

    yminus = abs(hsp);
    while (place_meeting(x+hsp,y+yminus,obj_box) &amp;&amp; yminus &gt;0) yminus--;
    y += yminus;
}

if(hp == 0) can_be_transformed = true;

y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
image_speed = 0.2;

if(alarm[0] == -1 &amp;&amp; !obj_GM.kid_can_transform &amp;&amp; start_boss){ 
    sprite_index = spr_obscuro_appear_dissapear;
    image_speed = 0.2;
    
    if(image_index &gt; 11 ){
        x = obj_pet.x;
        y = obj_pet.y - 50;
        alarm[0] = random(10) * room_speed;
    }
}else {
    sprite_index = spr_obscuro_walk_and_iddle;
    image_speed = 0.2;
}
draw_healthbar(x-25,y-65,x+25,y-70,hp/2,c_black,c_red,c_green,0,true,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
