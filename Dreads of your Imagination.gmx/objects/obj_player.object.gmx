<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
hsp_dir = 1;
vsp = 0;
jumpspeed = 5;
movespeed = 2;

arrow_x = 0.0;
arrow_y = 0.0;

rope = noone;
arrow = noone;
target = noone;
can_see = false;
globalvar transform;
transform = false;
facing = 1;
state = states.normal;

globalvar swords;
swords = 3;

globalvar arrows;
arrows = 3;

//SEE THIS LATER
lenx = 28;
leny = 1;
globalvar crate;
crate = false;

pointx = mouse_x;
pointy = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state){
    case states.normal: scr_player_normal(); break;
    //case states.talking: scr_player_talking(); break;  //TODO
    case states.transforming: scr_player_transforming(); break;
    case states.petcontroll: scr_iddle(); break;  
    case states.grab_ledge: scr_ledge_grab(); break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,-facing,1,0,c_white,1);
image_speed = 0.1;
if(collision_line(x,y, mouse_x, mouse_y, obj_box,false, false) || distance_to_point(mouse_x,mouse_y) &gt;= 300){
    if (collision_circle(mouse_x, mouse_y, 2, obj_transformable_enemy, 0, 1)) cursor_sprite = spr_cant_transform;
    draw_circle_colour(x,y,16,c_red,c_red,5);
    can_see = false;
}
else if (!collision_line(x,y, mouse_x, mouse_y, obj_box,false, false) &amp;&amp; distance_to_point(mouse_x,mouse_y) &lt; 300 &amp;&amp; collision_line(x,y, mouse_x, mouse_y, obj_transformable_enemy,false, false)){
    target = collision_circle(mouse_x, mouse_y, 2, obj_transformable_enemy, 0, 1);
    cursor_sprite = spr_can_transform;
    draw_circle_colour(x,y,16,c_green,c_green,5);
    can_see = true;
}
else cursor_sprite = spr_cursor;

if (speed != 0) draw_line(x, y, rope.x, rope.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.inventory[2,0] == spr_bow){
    crate = false;
    sprite_index = spr_player_bow;
}
if (global.inventory[2,0] == spr_sword){
    crate = false;
    sprite_index = spr_player_sword;
} 
if (global.inventory[2,0] == spr_placeCrate){
    crate = true;
    sprite_index = spr_player_box;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.inventory[1,0] == spr_bow){
    crate = false;
    sprite_index = spr_player_bow;
}
if (global.inventory[1,0] == spr_sword){
    crate = false;
    sprite_index = spr_player_sword;
} 
if (global.inventory[1,0] == spr_placeCrate){
    crate = true;
    sprite_index = spr_player_box;
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.inventory[0,0] == spr_bow){
    crate = false;
    sprite_index = spr_player_bow; 
}
if (global.inventory[0,0] == spr_sword){
    crate = false;
    sprite_index = spr_player_sword;
} 
if (global.inventory[0,0] == spr_placeCrate){
    crate = true;
    sprite_index = spr_player_box;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
