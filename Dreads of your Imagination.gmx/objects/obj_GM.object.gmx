<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar start_boss;
globalvar lvl2boss;
globalvar first_chicken;
globalvar first_shot;
globalvar haze_death;
globalvar first_spawn_lvl3;
globalvar second_spawn_lvl3;
first_spawn_lvl3 = true;
second_spawn_lvl3 = true;
haze_death = false;
first_chicken = true;
first_shot = true;
lvl2boss = false;
start_boss = false;
lvl_1_boss_dialogue = false;
lvl2bossrdy = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_player)){
    if (obj_player.state == states.transforming){
        if (instance_exists(obj_player))obj_player.image_alpha = 0.2;
        if (instance_exists(obj_box))obj_box.image_alpha = 0.2;
        if (instance_exists(obj_crate))obj_crate.image_alpha = 0.2;
        if (instance_exists(obj_e))obj_e.image_alpha = 0.2;
        if (instance_exists(obj_e2))obj_e2.image_alpha = 0.2;
        if (instance_exists(obj_transformable_enemy))obj_transformable_enemy.image_alpha = 0.2;
        if (instance_exists(obj_pet))obj_pet.image_alpha = 0.2;
        //if (instance_exists(obj_sword))obj_sword.image_alpha = 0.2;
        if (instance_exists(obj_torch))obj_torch.image_alpha = 0.2;
        if (instance_exists(obj_lightball_pickup))obj_lightball_pickup.image_alpha = 0.2;
        if (instance_exists(obj_web_pickup))obj_web_pickup.image_alpha = 0.2;
        if (instance_exists(obj_sign))obj_sign.image_alpha = 0.2;
        if (instance_exists(obj_bow))obj_bow.image_alpha = 0.2;
        if (instance_exists(obj_frog_jump))obj_frog_jump.image_alpha = 0.2;
    }
    else {
        if (instance_exists(obj_player))obj_player.image_alpha = 1.0;
        if (instance_exists(obj_box))obj_box.image_alpha = 1.0;
        if (instance_exists(obj_crate))obj_crate.image_alpha = 1.0;
        if (instance_exists(obj_e))obj_e.image_alpha = 1.0;
        if (instance_exists(obj_e2))obj_e2.image_alpha = 1.0;
        if (instance_exists(obj_transformable_enemy))obj_transformable_enemy.image_alpha = 1.0;
        if (instance_exists(obj_pet))obj_pet.image_alpha = 1.0;
        if (instance_exists(obj_super_eyes))obj_super_eyes.image_alpha = 1.0;
        if (instance_exists(obj_torch))obj_torch.image_alpha = 1.0;
        if (instance_exists(obj_sign))obj_sign.image_alpha = 1.0;
        if (instance_exists(obj_lightball_pickup))obj_lightball_pickup.image_alpha = 1.0;
        if (instance_exists(obj_web_pickup))obj_web_pickup.image_alpha = 1.0;
        if (instance_exists(obj_bow))obj_bow.image_alpha = 1.0;
        if (instance_exists(obj_frog_jump))obj_frog_jump.image_alpha = 1.0;
        if (instance_exists(obj_small))obj_small.image_alpha = 1.0;
        if (instance_exists(obj_speed))obj_speed.image_alpha = 1.0;
    }
}

if(keyboard_check(ord("L"))){
    keyboard_clear(ord("L"));
    if(global.checkpointR != 0) {
        room_goto(global.checkpointR);
    }
    else {
        room_restart();
    }
}
if(room = lvl1_2 || room = lvl1_3 || room = lvl1_4){
    with(obj_player){
        nearest_torch = instance_nearest(x, y, obj_torch);
        nearest_lightb = instance_nearest(x, y, obj_fireball);
        if(obj_lightning.darkness &amp;&amp; !nearest_torch.can_light) hp -= 0.5;
        if(obj_lightning.darkness &amp;&amp; nearest_torch.can_light &amp;&amp; distance_to_object(nearest_torch) &gt; 200) hp -= 0.5;
        if(!obj_lightning.darkness &amp;&amp; obj_lightning.already &amp;&amp; !nearest_torch.can_light &amp;&amp; distance_to_object(nearest_torch) &gt; 0) hp -= 0.5;
        if(start_boss &amp;&amp; place_meeting(obj_pet.x,obj_pet.y,obj_boss_obscuro)) hp -=1.5;
    }
    if(lvl_1_boss_dialogue) {
        with(boss_dialogue) {
            obj_player.dialogue = boss_dialogue;
            global.itemflag[room, itemid] = true;
            obj_player.state = states.talking;
            end_of_line = 0;
            line = 0;
        }
    }
}

if(room = lvl2_5){
    
    if(lvl2boss &amp;&amp; lvl2bossrdy){
        haze_stuck_lvl2.x = obj_player.x;
        haze_stuck_lvl2.y = obj_player.y;
        instance_create(1216,743, obj_snake_boss);
        instance_create(1500,743, obj_bat_boss);
        if(instance_number(obj_snake_boss) &gt; 2 || instance_number(obj_bat_boss) &gt; 2)
            lvl2bossrdy = false;
    }
    if(lvl2boss &amp;&amp; !lvl2bossrdy){
        if(instance_number(obj_snake_boss) = 0 &amp;&amp; instance_number(obj_bat_boss) = 0)
            {
                boss2_talk.x = obj_player.x;
                boss2_talk.y = obj_player.y;
                instance_create(1636,437, obj_boss_obscuro_lvl2);
                instance_create(1192,470, obj_dark_deformed_player);
            }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(all)
    instance_destroy();
aux = instance_create(0,0,obj_fade);
aux.room_to_fade = rm_initialize;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -999;
draw_sprite(spr_healthbar_bg,1,view_xview[0]+46, view_yview[0]+34);
if(instance_exists(obj_player))draw_sprite_ext(spr_healthbar_inner,1,view_xview[0]+46, view_yview[0]+34, obj_player.hp/100,1,0,c_white,1);
draw_sprite(spr_healthbar_border,1,view_xview[0]+15, view_yview[0]+15);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
